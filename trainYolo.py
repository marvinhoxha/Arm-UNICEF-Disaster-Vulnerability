from ultralytics import YOLO
import json
import pandas as pd
import tqdm

# def get_classes_count(pred_json: str):
#     classes_count = {}
#     classes_count[0] = 0
#     classes_count[1] = 0
#     classes_count[2] = 0
#     for j in json.loads(pred_json):
#         classes_count[j['class']] += 1
        
#     return classes_count


model = YOLO('yolov8n.pt')  # load a pretrained YOLOv8n detection model
model.train(data='Data/data.yaml', epochs=3) 
results = model.val()  # evaluate model performance on the validation set
results = model('Images/id_zw7e9oexf6tw.tif')  # predict on an image
results = model.export(format='onnx')

# submission_df = pd.DataFrame(columns=["image_id", "Target"])
# test = pd.read_csv("Data/Test.csv")

# for index, row in tqdm(test.iterrows(), total=len(test)):
#     pred = model.predict(f"Images/{row['image_id']}.tif")
#     pred_json = get_classes_count(pred[0].tojson())
    
#     df = pd.DataFrame({"image_id" : [f"{row['image_id']}_1",
#                                      f"{row['image_id']}_2",
#                                      f"{row['image_id']}_3"],
#                       "Target" : [pred_json[0], pred_json[1], pred_json[2]]},columns=["image_id", "Target"])
#     submission_df = pd.concat([submission_df, df], axis = 0)
    
# submission_df.to_csv("submission.csv", index=False)